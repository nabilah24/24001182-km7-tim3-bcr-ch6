/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";

// Create Virtual Routes

const ProfileLazyImport = createFileRoute("/profile")();
const LoginLazyImport = createFileRoute("/login")();
const IndexLazyImport = createFileRoute("/")();
const CarsCreateLazyImport = createFileRoute("/cars/create")();
const CarsIdLazyImport = createFileRoute("/cars/$id")();
const CarsEditIdLazyImport = createFileRoute("/cars/edit/$id")();
const TypeCarsLazyImport = createFileRoute("/types")();
const TypeCarsIdLazyImport = createFileRoute("/types/$id")();
const TypeCarsCreateLazyImport = createFileRoute("/types/create")();
const TypeCarsEditIdLazyImport = createFileRoute("/types/edit/$id")();

// Create/Update Routes

const ProfileLazyRoute = ProfileLazyImport.update({
  id: "/profile",
  path: "/profile",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/profile.lazy").then((d) => d.Route));

const LoginLazyRoute = LoginLazyImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/login.lazy").then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

const CarsCreateLazyRoute = CarsCreateLazyImport.update({
  id: "/cars/create",
  path: "/cars/create",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/cars/create.lazy").then((d) => d.Route));

const CarsIdLazyRoute = CarsIdLazyImport.update({
  id: "/cars/$id",
  path: "/cars/$id",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/cars/$id.lazy").then((d) => d.Route));

const CarsEditIdLazyRoute = CarsEditIdLazyImport.update({
  id: "/cars/edit/$id",
  path: "/cars/edit/$id",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/cars/edit/$id.lazy").then((d) => d.Route)
);

const TypeCarsLazyRoute = TypeCarsLazyImport.update({
  id: "/types",
  path: "/types",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/types/index.lazy").then((d) => d.Route));

const TypeCarsIdLazyRoute = TypeCarsIdLazyImport.update({
  id: "types/$id",
  path: "/types/$id",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/types/$id.lazy").then((d) => d.Route));

const TypeCarsCreateLazyRoute = TypeCarsCreateLazyImport.update({
  id: "/types/create",
  path: "/types/create",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/types/create.lazy").then((d) => d.Route));

const TypeCarsEditIdLazyRoute = TypeCarsEditIdLazyImport.update({
  id: "/types/edit/$id",
  path: "/types/edit/$id",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/types/edit/$id.lazy").then((d) => d.Route)
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/profile": {
      id: "/profile";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof ProfileLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/cars/$id": {
      id: "/cars/$id";
      path: "/cars/$id";
      fullPath: "/cars/$id";
      preLoaderRoute: typeof CarsIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/cars/create": {
      id: "/cars/create";
      path: "/cars/create";
      fullPath: "/cars/create";
      preLoaderRoute: typeof CarsCreateLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/cars/edit/$id": {
      id: "/cars/edit/$id";
      path: "/cars/edit/$id";
      fullPath: "/cars/edit/$id";
      preLoaderRoute: typeof CarsEditIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/types": {
      id: "/types";
      path: "/types";
      fullPath: "/types";
      preLoaderRoute: typeof TypeCarsLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/types/$id": {
      id: "/types/$id";
      path: "/types/$id";
      fullPath: "/types/$id";
      preLoaderRoute: typeof TypeCarsIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/types/create": {
      id: "/types/create";
      path: "/types/create";
      fullPath: "/types/create";
      preLoaderRoute: typeof TypeCarsCreateLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/types/edit/$id": {
      id: "/types/edit/$id";
      path: "/types/edit/$id";
      fullPath: "/types/edit/$id";
      preLoaderRoute: typeof TypeCarsEditIdLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/profile": typeof ProfileLazyRoute;
  "/cars/$id": typeof CarsIdLazyRoute;
  "/cars/create": typeof CarsCreateLazyRoute;
  "/cars/edit/$id": typeof CarsEditIdLazyRoute;
  "/types": typeof TypeCarsLazyRoute
  "/types/$id": typeof TypeCarsIdLazyRoute;
  "/types/create": typeof TypeCarsCreateLazyRoute;
  "/types/edit/$id": typeof TypeCarsEditIdLazyRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/profile": typeof ProfileLazyRoute;
  "/cars/$id": typeof CarsIdLazyRoute;
  "/cars/create": typeof CarsCreateLazyRoute;
  "/cars/edit/$id": typeof CarsEditIdLazyRoute;
  "/types": typeof TypeCarsLazyRoute;
  "/types/$id": typeof TypeCarsIdLazyRoute;
  "/types/create": typeof TypeCarsCreateLazyRoute;
  "/types/edit/$id": typeof TypeCarsEditIdLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/profile": typeof ProfileLazyRoute;
  "/cars/$id": typeof CarsIdLazyRoute;
  "/cars/create": typeof CarsCreateLazyRoute;
  "/cars/edit/$id": typeof CarsEditIdLazyRoute;
  "/types": typeof TypeCarsLazyRoute;
  "/types/$id": typeof TypeCarsIdLazyRoute;
  "/types/create": typeof TypeCarsCreateLazyRoute;
  "/types/edit/$id": typeof TypeCarsEditIdLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/login"
    | "/profile"
    | "/cars/$id"
    | "/cars/create"
    | "/cars/edit/$id"
    | "/types"
    | "/types/$id"
    | "/types/create"
    | "/types/edit/$id";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/login"
    | "/profile"
    | "/cars/$id"
    | "/cars/create"
    | "/cars/edit/$id"
    | "/types"
    | "/types/$id"
    | "/types/create"
    | "/types/edit/$id";
  id:
    | "__root__"
    | "/"
    | "/login"
    | "/profile"
    | "/cars/$id"
    | "/cars/create"
    | "/cars/edit/$id"
    | "/types"
    | "/types/$id"
    | "/types/create"
    | "/types/edit/$id";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  LoginLazyRoute: typeof LoginLazyRoute;
  ProfileLazyRoute: typeof ProfileLazyRoute;
  CarsIdLazyRoute: typeof CarsIdLazyRoute;
  CarsCreateLazyRoute: typeof CarsCreateLazyRoute;
  CarsEditIdLazyRoute: typeof CarsEditIdLazyRoute;
  TypeCarsLazyRoute: typeof TypeCarsLazyRoute;
  TypeCarsIdLazyRoute: typeof TypeCarsIdLazyRoute;
  TypeCarsCreateLazyRoute: typeof TypeCarsCreateLazyRoute;
  TypeCarsEditIdLazyRoute: typeof TypeCarsEditIdLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  CarsIdLazyRoute: CarsIdLazyRoute,
  CarsCreateLazyRoute: CarsCreateLazyRoute,
  CarsEditIdLazyRoute: CarsEditIdLazyRoute,
  TypeCarsLazyRoute: TypeCarsLazyRoute,
  TypeCarsIdLazyRoute: TypeCarsIdLazyRoute,
  TypeCarsCreateLazyRoute: TypeCarsCreateLazyRoute,
  TypeCarsEditIdLazyRoute: TypeCarsEditIdLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/login",
        "/profile",
        "/cars/$id",
        "/cars/create",
        "/cars/edit/$id"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/login": {
      "filePath": "login.lazy.jsx"
    },
    "/profile": {
      "filePath": "profile.lazy.jsx"
    },
    "/cars/$id": {
      "filePath": "cars/$id.lazy.jsx"
    },
    "/cars/create": {
      "filePath": "cars/create.lazy.jsx"
    },
    "/cars/edit/$id": {
      "filePath": "cars/edit/$id.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
